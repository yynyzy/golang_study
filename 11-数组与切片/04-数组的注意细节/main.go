package main

import "fmt"

/*
数组使用注意事项和细节
1)数组是多个相同类型数据的组合,一个数组一旦声明/定义了,其长度是固定的,不能动态变化。
2)var arr []int 这时 arr就是一个 slice切片
3)数组中的元素可以是任何数据类型，包括值类型和引用类型，但是不能混用。
4)数组创建后，如果没有赋值，有默认值
		数值类型数组:默认值为 0
		字符串数组:默认值为 ""
		bool数组:默认值为 false
5)使用数组的步骤:
	 1.声明数组并开辟空间
	 2.给数组各个元素赋值
	 3.使用数组
6)数组的下标是从0开始的。
7)数组下标必须在指定范围内使用，否则报panic:数组越界，比如: var arr [5]int则有效下标为0-4
8)Go的数组属值类型，在默认情况下是值传递，因此会进行值拷贝。数组间不会相互影响
9)如想在其它函数中，去修改原来的数组，可以使用引用传递(指针方式)
**/
func test1(arr [4]int) {
	arr[0] = 100
}

//如想在其它函数中，去修改原来的数组，可以使用引用传递(指针方式)
func test2(arr *[4]int) {
	(*arr)[0] = 100
}
func main() {
	arr := [...]int{1, 2, 3, 4}
	test1(arr)
	test2(&arr)
	fmt.Printf("arr数组的值为%v", arr)
}
